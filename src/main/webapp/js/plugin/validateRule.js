/** * Created by 111 on 2016/7/22. */$.extend($.fn.validatebox.defaults.rules,{    mobile: {        validator: function (value, param) {            return /^(?:13\d|15\d|18\d|17\d)-?\d{5}(\d{3}|\*{3})$/.test(value);        },        message: '手机号码不正确'    },    /*长度匹配*/    betweenLength:{        validator:function(value,param){            return value.length>param[0] && value.length<param[1];        },        message:'长度应控制到{0}-{1}个字符'    },    /*非法字符*/    illegalCharacter:{        validator:function(value,param){            return !(/[@#\$%\^&\*]/.test(value));        },        message:'监测到有非法字符请重新输入'    },    /*str中包含中文的长度*/    cHLength:{        validator:function(value,param){            var str=value.replace(/[^\x00-\xff]/g, "**");            return str.length<param[0];        },        message:'长度不可超过{0}个字符，一个中文是2个字符'    },    /*最大长度控制*/    maxLength:{        validator:function(value,param){            return value.length<param[0];        },        message:'长度最大不可以超多{0}个字符'    },    /*小数点前的位数为12位*/    maxNumLength: {        validator:function(value,param){            return value.split('.')[0].length<param[0];        },        message:'数字长度不可以超过{0}位，不包含小数点后的数字长度'    },    illegalLogisc:{        validator:function(value,param){            var pattern = new RegExp("[`~!@#$^&*() ? % \"=|{}':;',\\[\\].<>~！@#￥……&*（）——|{}《》、\\/  【】‘；：”“'。，、？]");            return !pattern.test(value);        },        message:'监测到有非法字符请重新输入'    },    /*物流单号*/    logisNum:{        validator:function(value){            return /^[a-zA-Z0-9]+$/.test(value);        },        message:'监测到有非法字符请重新输入'    },    /*物流公司*/    logisCom:{        validator:function(value){            return /^[A-Za-z0-9\\u4e00-\\u9fa5]+$/.test(value);        },        message:'监测到有非法字符请重新输入'    },    positivenumber:{        validator:function(value){            return /^[0-9]*$/.test(value);        },        message:'请输入正整数'    }    });var validateRegExp = {    decmal: "^([+-]?)\\d*\\.\\d+",    // 浮点数    decmal1: "^[1-9]\\d*.\\d*|0.\\d*[1-9]\\d*",    // 正浮点数    decmal2: "^-([1-9]\\d*.\\d*|0.\\d*[1-9]\\d*)",    // 负浮点数    decmal3: "^-?([1-9]\\d*.\\d*|0.\\d*[1-9]\\d*|0?.0+|0)",    // 浮点数    decmal4: "^[1-9]\\d*.\\d*|0.\\d*[1-9]\\d*|0?.0+|0",    // 非负浮点数（正浮点数 + 0）    decmal5: "^(-([1-9]\\d*.\\d*|0.\\d*[1-9]\\d*))|0?.0+|0",    // 非正浮点数（负浮点数 +    // 0）    intege: "^-?[1-9]\\d*",    // 整数    intege1: "^[1-9]\\d*",    // 正整数    intege2: "^-[1-9]\\d*",    // 负整数    num: "^([+-]?)\\d*\\.?\\d+",    // 数字    num1: "^[1-9]\\d*|0",    // 正数（正整数 + 0）    num2: "^-[1-9]\\d*|0",    // 负数（负整数 + 0）    ascii: "^[\\x00-\\xFF]+",    // 仅ACSII字符    chinese: "^[\\u4e00-\\u9fa5]+",    // 仅中文    color: "^[a-fA-F0-9]{6}",    // 颜色    date: "^\\d{4}(\\-|\\/|\.)\\d{1,2}\\1\\d{1,2}",    // 日期    email: "^\\w+((-\\w+)|(\\.\\w+))*\\@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)*\\.[A-Za-z0-9]+",    // 邮件    idcard: "^[1-9]([0-9]{14}|[0-9]{17})",    // 身份证    ip4: "^(25[0-5]|2[0-4]\\d|[0-1]\\d{2}|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|[0-1]\\d{2}|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|[0-1]\\d{2}|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|[0-1]\\d{2}|[1-9]?\\d)",    // ip地址    letter: "^[A-Za-z]+",    // 字母    letter_l: "^[a-z]+",    // 小写字母    letter_u: "^[A-Z]+",    // 大写字母    mobile: "^0?(13|15|18|14|17)[0-9]{9}$",    // 手机    notempty: "^\\S+",    // 非空    pwd: "^.*[A-Za-z0-9\\w_-]+.*",    // 密码    //8-20数字，字母区分大小写    letterAndPassword:"^[0-9a-zA-Z]{8,20}",    newpwd: "((?=.*\d)(?=.*\D)|(?=.*[a-zA-Z])(?=.*[^a-zA-Z]))^.{8,20}$",    // 密码 长度8~20位数字、字母、字符至少包含两种    fullNumber: "^[0-9]+",    // 数字    picture: "(.*)\\.(jpg|bmp|gif|ico|pcx|jpeg|tif|png|raw|tga)",    // 图片    qq: "^[1-9]*[1-9][0-9]*",    // QQ号码    rar: "(.*)\\.(rar|zip|7zip|tgz)",    // 压缩文件    tel: "^[0-9\-()（）]{7,18}",    // 电话号码的函数(包括验证国内区号,国际区号,分机号)    url: "^http[s]?:\\/\\/([\\w-]+\\.)+[\\w-]+([\\w-./?%&=]*)?",    // url    username: "^[A-Za-z0-9_\\-\\u4e00-\\u9fa5]+",    // 户名    deptname: "^[A-Za-z0-9_()（）\\-\\u4e00-\\u9fa5]+",    // 单位名    zipcode: "^\\d{6}",    // 邮编    realname: "^[A-Za-z\\u4e00-\\u9fa5]+",    // 真实姓名    companyname: "^[A-Za-z0-9_()（）\\-\\u4e00-\\u9fa5]+",    companyaddr: "^[A-Za-z0-9_()（）\\#\\-\\u4e00-\\u9fa5]+",    companysite: "^http[s]?:\\/\\/([\\w-]+\\.)+[\\w-]+([\\w-./?%&#=]*)?"};var validateRules = {    isNull: function (str) {        return (str == "" || typeof str != "string");    },    isNum:function (str) {        return new RegExp(validateRegExp.intege1).test(str);    },    maxChLength: function (str, _max) {        return str.replace(/[^\x00-\xff]/g, "**").length <= _max;    },    maxLength: function (str, _max) {        return str.length <= _max;    },    betweenLength: function (str, _min, _max) {        return (str.length >= _min && str.length <= _max);    },    isUid: function (str) {        return new RegExp(validateRegExp.username).test(str);    },    fullNumberName: function (str) {        return new RegExp(validateRegExp.fullNumber).test(str);    },    isLetterPwd :function(str){        return new RegExp(validateRegExp.letterAndPassword).test(str);    },    isPwd: function (str) {        return new RegExp(validateRegExp.newpwd).test(str);    },    isPwdRepeat: function (str1, str2) {        return (str1 == str2);    },    isEmail: function (str) {        return new RegExp(validateRegExp.email).test(str);    },    isTel: function (str) {        return new RegExp(validateRegExp.tel).test(str);    },    isMobile: function (str) {        return new RegExp(validateRegExp.mobile).test(str);    },    checkType: function (element) {        return (element.attr("type") == "checkbox" || element.attr("type") == "radio" || element.attr("rel") == "select");    },    isRealName: function (str) {        return new RegExp(validateRegExp.realname).test(str);    },    isCompanyname: function (str) {        return new RegExp(validateRegExp.companyname).test(str);    },    isCompanyaddr: function (str) {        return new RegExp(validateRegExp.companyaddr).test(str);    },    isCompanysite: function (str) {        return new RegExp(validateRegExp.companysite).test(str);    },    simplePwd: function (str) {        return pwdLevel(str) == 1;    },    isDate: function (str) {        return new RegExp(validateRegExp.date).test(str);    },    isChinese: function (str) {        return new RegExp(validateRegExp.chinese).test(str);    }};function chk(str) {    var bForbidden = false;    var ch;    var strForbidden = new Array("<", ">", ".", "%", "&", "@", "-");    //      //罗列所有被禁止的方法字符    var pattern = new RegExp("[`~!@#$^&*() ? % \"=|{}':;',\\[\\].<>~！@#￥……&*（）——|{}《》、\\/  【】‘；：”“'。，、？]");    for (var j = 0; j < str.length; j++) { //遍历用户输入的数据        ch = str.substr(j, 1);        if (pattern.test(ch))                //如果包含非法字符        {            bForbidden = true;                  //设置此变量为true            break;        }    }    if (bForbidden) {        return true;    }}function ltrim(text) {    return (text || "").replace(/^\s+/g, "").replace(/\s+$/g, "");}